{"version":3,"sources":["App.js","index.js"],"names":["Content","Layout","Option","Select","App","props","state","field","userName","env","branch","column","order","page","total","pageSize","current","dataList","userList","envList","branchList","this","getUserList","getEnvList","getBranchList","getData","axios","post","data","Object","assign","setState","list","renderEcharts","get","params","name","value","record","id","pagination","filters","sorter","columnKey","sort","a","b","createTime","echarts","init","document","getElementById","setOption","tooltip","trigger","legend","xAxis","type","map","el","Date","toLocaleString","yAxis","series","size","toFixed","smooth","buildTime","columns","title","dataIndex","key","compare","render","text","danger","onClick","deleteItem","bind","className","gutter","span","placeholder","style","width","allowClear","onChange","handleChangeUser","index","handleChangeEnv","handleChangeBranch","height","rowKey","dataSource","handleTableChange","Component","ReactDOM"],"mappings":"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","file":"static/js/main.9fd1ce95.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Row, Col, Select, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport './app.css';\nimport axios from 'axios'\nimport echarts from 'echarts'\nconst { Content } = Layout;\nconst { Option } = Select;\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      field: {\n        userName: '',\n        env: '',\n        branch: '',\n        column: \"\",\n        order: \"\",\n      },\n      page: {\n        total: 0,\n        pageSize: 10,\n        current: 1\n      },\n      dataList: [],\n      userList: [],\n      envList: [],\n      branchList: []\n    }\n  }\n  componentDidMount () {\n    this.getUserList()\n    this.getEnvList()\n    this.getBranchList()\n    this.getData()\n  }\n  async getData (current) {\n    const { data } = await axios.post('/packinfo/getAllByParam', {\n      ...this.state.field,\n      current: current || this.state.page.current,\n      pageSize: this.state.page.pageSize\n    })\n    const page = Object.assign(this.state.page, { total: data.data.total })\n    \n    this.setState({\n      dataList: data.data.list,\n      page\n    })\n    this.renderEcharts(data.data.list)\n  }\n  async getUserList () {\n    const { data } = await axios.get('/packinfo/getList', {\n      params: { name: 'userName' }\n    })\n    this.setState({\n      userList: data.data\n    })\n  }\n  async getEnvList () {\n    const { data } = await axios.get('/packinfo/getList', {\n      params: { name: 'env' }\n    })\n    this.setState({\n      envList: data.data\n    })\n  }\n  async getBranchList () {\n    const { data } = await axios.get('/packinfo/getList', {\n      params: { name: 'branch' }\n    })\n    this.setState({\n      branchList: data.data\n    })\n  }\n  handleChangeUser (value) {\n    let userName = ''\n    if (value) {\n      userName = value\n    }\n    const field = Object.assign(this.state.field, { userName })\n    this.setState({\n      field\n    })\n  }\n  handleChangeEnv (value) {\n    let env = ''\n    if (value) {\n      env = value\n    }\n    const field = Object.assign(this.state.field, { env })\n    this.setState({\n      field\n    })\n  }\n  handleChangeBranch (value) {\n    let branch = ''\n    if (value) {\n      branch = value\n    }\n    const field = Object.assign(this.state.field, { branch })\n    this.setState({\n      field\n    })\n  }\n  async deleteItem (record) {\n    await axios.post('/packinfo/deleteItem', {\n      id: record.id\n    })\n    this.getData()\n  }\n  handleTableChange (pagination, filters, sorter) {\n    const field = Object.assign(this.state.field, {\n      column: sorter.columnKey,\n      order: sorter.order === \"ascend\" ? 'asc' : sorter.order === \"descend\" ? 'desc' : '',\n    })\n    this.setState({\n      page: pagination,\n      field\n    }, () => this.getData())\n  }\n  renderEcharts (data) {\n    // 基于准备好的dom，初始化echarts实例\n    data = data.sort((a, b) => a.createTime - b.createTime)\n    var myChart = echarts.init(document.getElementById('main'));\n    // 绘制图表\n    myChart.setOption({\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        data: ['构建体积', '构建耗时']\n    },\n      xAxis: {\n          type: 'category',\n          data: data.map(el => new Date(el.createTime).toLocaleString())\n      },\n      yAxis: {\n          type: 'value'\n      },\n      series: [\n        {\n          name: '构建体积',\n          data: data.map(el => (el.size / 1024 / 1024).toFixed(2)),\n          type: 'line',\n          smooth: true,\n        }, {\n          name: '构建耗时',\n          data: data.map(el => el.buildTime),\n          type: 'line',\n          smooth: true,\n        }\n      ]\n    });\n  }\n  render() {\n    const { dataList, userList, envList, branchList, page } = this.state\n    \n    const columns = [\n      {\n        title: '最后提交',\n        dataIndex: 'userName',\n        key: 'userName',\n      },\n      {\n        title: '构建环境',\n        dataIndex: 'env',\n        key: 'env',\n      },\n      {\n        title: '分支',\n        dataIndex: 'branch',\n        key: 'branch',\n      },\n      {\n        title: '构建体积',\n        dataIndex: 'size',\n        key: 'size',\n        sorter: {\n          compare: (a, b) => a.size - b.size,\n        },\n        render: (text, record) => <span>{(record.size / 1024).toFixed(2)}Kb</span>,\n      },\n      {\n        title: '构建耗时',\n        dataIndex: 'buildTime',\n        key: 'buildTime',\n        sorter: {\n          compare: (a, b) => a.buildTime - b.buildTime,\n        }\n      },\n      {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        key: 'createTime',\n        sorter: {\n          compare: (a, b) => a.createTime - b.createTime,\n        },\n        render: (text, record) => <span>{new Date(record.createTime).toLocaleString()}</span>,\n      },\n      {\n        title: '操作',\n        render: (text, record) => <Button type=\"text\" danger onClick={ this.deleteItem.bind(this, record) }>删除</Button>,\n      },\n    ];\n    \n    return(\n      <Layout>\n        <Content>\n          <div className=\"appBar\">\n            <Row gutter={16} className=\"searchBar\">\n              <Col className=\"gutter-row\" span={6}>\n              <Select placeholder=\"请选择姓名\" style={{ width: '100%' }} allowClear onChange={ this.handleChangeUser.bind(this) }>\n                {\n                  userList.map((el, index) => {\n                    return <Option value={el.userName} key={index}>{el.userName}</Option>\n                  })\n                }\n              </Select>\n              </Col>\n              <Col className=\"gutter-row\" span={6}>\n              <Select placeholder=\"请选择构建环境\" style={{ width: '100%' }} allowClear onChange={ this.handleChangeEnv.bind(this) }>\n                {\n                  envList.map((el, index) => {\n                    return <Option value={el.env} key={index}>{el.env}</Option>\n                  })\n                }\n              </Select>\n              </Col>\n              <Col className=\"gutter-row\" span={6}>\n              <Select placeholder=\"请选择分支\" style={{ width: '100%' }} allowClear onChange={ this.handleChangeBranch.bind(this) }>\n                {\n                  branchList.map((el, index) => {\n                    return <Option value={el.branch} key={index}>{el.branch}</Option>\n                  })\n                }\n              </Select>\n              </Col>\n              <Col className=\"gutter-row\" span={6}>\n                <Button type=\"primary\" onClick={ this.getData.bind(this, 1) }>查询</Button>\n              </Col>\n            </Row>\n            <div id=\"main\" style={{ height: 400 }}></div>\n            <Table size=\"small\" rowKey=\"id\" dataSource={dataList} columns={columns} pagination={page} onChange={this.handleTableChange.bind(this)}/>\n          </div>\n        </Content>\n      </Layout>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}